"""
Django settings for WH1804Django_dongqiwei project.

Generated by 'django-admin startproject' using Django 2.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))
sys.path.insert(0, os.path.join(BASE_DIR, 'extra_apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '(*_dj2j3r3)4ss$@74(@m@-w5w(pnak5wxtt-l87ullzf65_*e'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'pure_pagination',
    'captcha',
    'djcelery',
    'reversion',
]

MYAPPS = [
    'users',
    'comments',
    'message',
    'books',
    'xadmin',
    'DjangoUeditor',
    'utils',
    'crispy_forms',
]

INSTALLED_APPS += MYAPPS
# AUTH_USER_MODEL = 'users.ArtsUser'
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'WH1804Django_dongqiwei.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'WH1804Django_dongqiwei.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'shucheng',
        'USER': 'root',
        'PASSWORD': '081095',
        'HOST': '127.0.0.1'
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/
SESSION_SERIALIZER = 'django.contrib.sessions.serializers.PickleSerializer'

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)

EMAIL_HOST = 'smtp.163.com'
EMAIL_PORT = 25
EMAIL_HOST_USER = '15727154831@163.com'
EMAIL_HOST_PASSWORD = '081095dfqq'
EMAIL_USE_TLS = False
EMAIL_FROM = '15727154831@163.com'

############### celery settings begin #############
'''
celery是分布式异步消息队列处理框架
以redis作为MQ数据存储和转发
'''
REDIS_DEPLOY_FLAG = "test"

REDIS_SERVICE = {
    'test': ('127.0.0.1', '6379'),
    'online': ('192.168.11.11', '10379'),
}

CELERY_BROKER_URL = 'redis://%s:%s/1' % (REDIS_SERVICE[REDIS_DEPLOY_FLAG][0],
                                         REDIS_SERVICE[REDIS_DEPLOY_FLAG][1])

CELERY_ACCEPT_CONTENT = ['json']

CELERY_TASK_SERIALIZER = 'json'

# CELERY_RESULT_BACKEND = 'django-db'

CELERY_RESULT_BACKEND = 'redis://%s:%s/2' % (REDIS_SERVICE[REDIS_DEPLOY_FLAG][0],
                                             REDIS_SERVICE[REDIS_DEPLOY_FLAG][1])

# 部署的django服务的IP和端口
DJANGO_SERVICE = ('127.0.0.1', 8000)

import redis

R = redis.Redis(host='127.0.0.1', port=6379, db=0)

# CACHES = {
#     'default': {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": "redis://%s:%s/1" % (REDIS_SERVICE[REDIS_DEPLOY_FLAG][0],
#                                          REDIS_SERVICE[REDIS_DEPLOY_FLAG][1]),
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#         }
#     }
# }

############### celery settings end #############


# ============支付宝配置相关==========
APP_ID = '2016091900548691'
# ALI_PAY_URL = ''
# 测试支付环境
ALI_PAY_DEV_URL = 'https://openapi.alipaydev.com/gateway.do?'
# 公钥配置
APP_PUBLIC_STRING = open(BASE_DIR + '/pay/rsa_public_key.pem').read()
# 私钥配置
APP_PRIVATE_STRING = open(BASE_DIR + '/pay/rsa_private_key.pem').read()
